# UE5 Builder Dockerfile for packaging games in Docker
FROM ubuntu:22.04 AS ue5-builder

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV UE_VERSION=5.4

# Install build dependencies
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    git \
    unzip \
    build-essential \
    mono-complete \
    mono-devel \
    ca-certificates-mono \
    python3 \
    python3-pip \
    clang \
    cmake \
    ninja-build \
    libssl-dev \
    libffi-dev \
    zip \
    && rm -rf /var/lib/apt/lists/*

# Set up workspace
WORKDIR /workspace

# Install UE5 build tools (simplified approach)
# In a real scenario, you would either:
# 1. Mount UE5 from host system
# 2. Download UE5 from Epic Games (requires authentication)
# 3. Use a pre-built UE5 Docker image

# For now, create a mock UE5 environment that can be replaced
RUN mkdir -p /opt/UnrealEngine/Engine/Binaries/Linux && \
    mkdir -p /opt/UnrealEngine/Engine/Build && \
    mkdir -p /opt/UnrealEngine/Engine/Programs

# Create a mock UnrealBuildTool that can package projects
COPY build-tools/mock-ue5-tools.sh /opt/UnrealEngine/Engine/Binaries/Linux/UnrealEditor
RUN chmod +x /opt/UnrealEngine/Engine/Binaries/Linux/UnrealEditor

# Set environment variables
ENV UE_ROOT=/opt/UnrealEngine
ENV PATH="$UE_ROOT/Engine/Binaries/Linux:$PATH"

# Copy packaging script
COPY package-ue5-game.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/package-ue5-game.sh

# Default command
CMD ["/usr/local/bin/package-ue5-game.sh"]